Oct 25:
    1, Deleted Enum for CellType, which could be determined by a double dispatch method, no need for an enum


    2, Created a diy exception: CardAlreadyExistException


    3, Changed setCard()'s Signature and variable taken


    4, Regulates that, in our gird, we use 0-based coordinate, also, we map the 2D array as: [col, row]
        which, [0, 0] will be Down-left corner of our grid
        [maxCol, maxRow] will be Top-right corner of our grid
        >>Example:
        [0, 2] [1, 2] [2, 2]
        [0, 1] [1, 1] [2, 1]
        [0, 0] [1, 0] [2, 0]


    5, About CardAlreadyExistException I made, I planned to pass it all the way to the controller, like this:
        (Player just tried to play a card to a HoleCell, or a Cell already has a Card)

        CardAlreadyExistException -> ICell -> IGrid -> ITripleTriadGame -> TripleTriadController

        Im not sure if it is the best practice, but I decided to do this for now.


    6, About Combo, planning on using DFS to Implement chain-effect on flipping.


    7ï¼Œ About managing Card's ownership, I have considered three options:

        1, In each ICard object, keeps a IPlayer object (a reference toward a IPlayer object) as its owner
        2, Each IPlayer manages a Unique ID, and keeps that ID in Cards that the player owns
        3, In each ICard, keeps a Unique ID, and in each IPlayer, keeps a List of ID, which are cards that the player owns

        Eventually, I have chosen option #2


    8, About "Fiction" I mentioned earlier, I mean "Faction", I misunderstood that word, I created a Enum and added them as there were in
        Original Final Fantasy, we may not use them eventually, just doing it in case we will have to develop it later, and there are
        No actual logic implemented about factions.


    9, Uses "Dependency Injection" on how to perform combat between two cards
        In ICard's compare() method, a rule is passed as "Dependency", the rule is in charge of determine which card's number is bigger
        For example, under default rule, 2 > 1, under reverse rule, 1 > 2


    10, Using Mask to determine which rules could co-exist, which could not, for example, two rules with Mask = 1 could not co-exist
        One rule with Mask = 1, another with Mask = 2, could co-exist


    11, Finished JSON configuration file's reading logic, haven't test it yet, may be bugs.